{"version":3,"sources":["actions/launches/index.js","selectors/launches/index.js","components/TextFilter/TextFilter.js","components/LaunchCard/LaunchCard.js","components/LaunchesPage/LaunchesPage.js","containers/Launches/Launches.js","reducers/launches/index.js","reducers/index.js","api/spacexdata.js","sagas/launches/launches.js","sagas/launches/index.js","sagas/index.js","App.js","init.js","serviceWorker.js","index.js"],"names":["loadLaunchesSuccess","params","type","loadLaunchesFailed","getLaunches","state","launches","payload","useStyles","makeStyles","marginLeft","marginRight","width","TextFilter","props","onChange","label","classes","TextField","className","root","margin","flickerImg","height","backgroundSize","missionPatchImg","noLaunchImgAvailable","textAlign","noMissionPatchImgAvailable","LaunchCard","links","mission_name","launch_year","details","Grid","item","sm","xs","Card","flickr_images","length","CardMedia","image","title","Typography","component","CardContent","gutterBottom","variant","mission_patch_small","withStyles","layout","button","dispatchLoadLaunches","error","loading","limit","useState","textFilter","setTextFilter","offset","setOffset","useEffect","loadLaunches","message","container","spacing","e","target","value","filter","launch","toLowerCase","includes","map","key","flight_number","Button","disabled","onClick","mapDispatchToProps","connect","LaunchesPage","initialState","combineReducers","action","axios","create","baseURL","watchLoadLaunches","takeLeading","race","task","call","cancel","take","spacexdata","get","response","put","data","status","statusText","rootSaga","all","store","preloadedState","sagaMiddleware","createSagaMiddleware","middlewares","enhancers","applyMiddleware","composedEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","run","configureStore","App","Launches","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1d09a039.chunk.js","sourcesContent":["/**\n * Actions for loading launches\n */\n\nexport const loadLaunchesStart = params => {\n  return { type: \"LOAD_LAUNCHES_START\", ...params };\n};\nexport const loadLaunchesSuccess = params => {\n  return { type: \"LOAD_LAUNCHES_SUCCESS\", ...params };\n};\nexport const loadLaunchesFailed = params => {\n  return { type: \"LOAD_LAUNCHES_FAILED\", ...params };\n};\nexport const loadLaunchesCancel = params => {\n  return { type: \"LOAD_LAUNCHES_CANCEL\", ...params };\n};\n","export const getLaunches = state => state.launches.payload;\n","/**\n * Basic material text input field that allows for customisation of\n * label and input change event\n */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles({\n  marginLeft: \"2vmin\",\n  marginRight: \"2vmin\",\n  width: 200\n});\n\nfunction TextFilter(props) {\n  const { onChange, label } = props;\n\n  const classes = useStyles();\n\n  return (\n    <TextField\n      label={label}\n      type=\"filter\"\n      className={classes.root}\n      margin=\"normal\"\n      onChange={onChange}\n    />\n  );\n}\nTextFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired\n};\n\nexport default TextFilter;\n","/**\n * A basic Card that displays SpaceX launch details including:\n * - Flickr launch image if available,\n * - Mission patch image,\n * - Mission name\n * - Launch year\n */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nconst useStyles = makeStyles({\n  flickerImg: {\n    height: 240,\n    backgroundSize: \"contain\",\n    margin: \"2vmin\"\n  },\n  missionPatchImg: {\n    height: 100,\n    backgroundSize: \"contain\",\n    margin: \"2vmin\"\n  },\n  noLaunchImgAvailable: {\n    textAlign: \"center\"\n  },\n  noMissionPatchImgAvailable: {\n    textAlign: \"center\"\n  }\n});\n\nfunction LaunchCard(props) {\n  const { links, mission_name, launch_year, details } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Grid item sm={4} xs={12}>\n      <Card>\n        {links.flickr_images.length > 0 ? (\n          <CardMedia\n            className={classes.flickerImg}\n            image={links.flickr_images[0]}\n            title=\"Launch Image\"\n          />\n        ) : (\n          <Typography className={classes.noLaunchImgAvailable} component=\"p\">\n            No launch image available\n          </Typography>\n        )}\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {mission_name} - {launch_year}\n          </Typography>\n          <Typography component=\"p\">{details}</Typography>\n        </CardContent>\n        {links.mission_patch_small !== null ? (\n          <CardMedia\n            className={classes.missionPatchImg}\n            image={links.mission_patch_small}\n            title=\"Mission Patch\"\n          />\n        ) : (\n          <Typography\n            className={classes.noMissionPatchImgAvailable}\n            component=\"p\">\n            No mission patch image available\n          </Typography>\n        )}\n      </Card>\n    </Grid>\n  );\n}\nLaunchCard.propTypes = {\n  /** links object from SpaceX API */\n  links: PropTypes.shape({\n    /** Mission patch image URL */\n    mission_patch_small: PropTypes.string,\n    /** Array of Flickr launch images URL. Only the first is used */\n    flickr_images: PropTypes.array\n  }),\n\n  /** Mission name */\n  mission_name: PropTypes.string.isRequired,\n  /** Year of launch */\n  launch_year: PropTypes.string.isRequired,\n  /** Extra details of launch */\n  details: PropTypes.string\n};\n\nexport default LaunchCard;\n","/**\n * Saga style Launches Page component which uses redux to dispatch\n * the api request\n *\n */\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nimport TextFilter from \"components/TextFilter\";\nimport LaunchCard from \"components/LaunchCard/\";\nimport Loading from \"components/Loading\";\n\nconst styles = {\n  layout: {\n    width: \"auto\",\n    marginLeft: \"2vmin\",\n    marginRight: \"2vmin\"\n  },\n  button: {\n    margin: \"5px\"\n  }\n};\n\nfunction LaunchesPage(props) {\n  const {\n    launches,\n    dispatchLoadLaunches,\n    error,\n    loading,\n    // Limit launches loaded to default of 6\n    // This will also indicate \"Load More\" button to load 6 more launches\n    limit = 6\n  } = props;\n\n  const [textFilter, setTextFilter] = useState(\"\");\n  const [offset, setOffset] = useState(0);\n\n  // Load launches on mount\n  useEffect(() => {\n    loadLaunches();\n    // Explictly ensuring this only gets run once\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /**\n   * Loads launches. After first call it loads 6 more\n   *\n   * @param {Object} params optionally override params offset and limit\n   */\n  const loadLaunches = (params = {}) => {\n    // Increase offset\n    setOffset(offset + limit);\n    // Dispatch load event\n    dispatchLoadLaunches({ params: { offset, limit, ...params } });\n  };\n\n  /** Load More button event handler */\n  const onLoadMore = () => {\n    loadLaunches();\n  };\n\n  /** Filter launches based on available filters */\n  const launchFilter = launch => {\n    let { details, mission_name, launch_year } = launch;\n\n    // Default to empty string if null\n    details = details || \"\";\n\n    return (\n      mission_name.toLowerCase().includes(textFilter) ||\n      launch_year.includes(textFilter) ||\n      details.toLowerCase().includes(textFilter)\n    );\n  };\n\n  const onFilterChange = event => {\n    setTextFilter(event.target.value);\n  };\n\n  const { classes } = props;\n\n  if (error) {\n    return <Typography component=\"p\">{error.message}</Typography>;\n  }\n\n  return (\n    <div className={classes.layout}>\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          {loading && <Loading />}\n          <TextFilter\n            label=\"Filter launches\"\n            onChange={e => onFilterChange(e)}\n          />\n        </Grid>\n\n        {launches.filter(launchFilter).map(launch => (\n          <LaunchCard {...launch} key={launch.flight_number} />\n        ))}\n\n        <Grid item xs={12}>\n          <Button\n            disabled={loading}\n            variant=\"outlined\"\n            className={classes.button}\n            onClick={onLoadMore}>\n            Load More\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nLaunchesPage.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(LaunchesPage);\n","/**\n * Launches container to manage redux state and actions\n */\n\nimport { connect } from \"react-redux\";\n\nimport { loadLaunchesStart } from \"actions/\";\nimport { getLaunches } from \"selectors/launches\";\n\nimport LaunchesPage from \"components/LaunchesPage\";\n\nconst mapStateToProps = state => ({\n  launches: getLaunches(state),\n  error: state.launches.error,\n  loading:\n    state.launches.loading === true ||\n    // null indicates initial state\n    state.launches.loading === null\n});\nconst mapDispatchToProps = {\n  dispatchLoadLaunches: loadLaunchesStart\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LaunchesPage);\n","/**\n * Launches reducer for managing state changes to launches\n */\n\nconst initialState = {\n  payload: [],\n  error: null,\n  loading: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case \"LOAD_LAUNCHES_START\":\n      return {\n        ...state,\n        loading: true\n      };\n    case \"LOAD_LAUNCHES_SUCCESS\":\n      return {\n        ...state,\n        // Concatenate launches onto the end of current state\n        payload: [...state.payload, ...action.payload],\n        loading: false\n      };\n    // Reset state\n    case \"LOAD_LAUNCHES_FAILED\":\n      return {\n        // With a view to prevent overwriting other state in this reducer\n        ...state,\n        error: action.error || {}\n      };\n    case \"LOAD_LAUNCHES_CANCEL\":\n      return {\n        // With a view to prevent overwriting other state in this reducer\n        ...initialState\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport launches from \"./launches/\";\n\nexport default combineReducers({\n  launches\n});\n","import axios from \"axios\";\n\nconst API_URL_BASE = \"https://api.spacexdata.com/v3/\";\n\nexport default axios.create({\n  baseURL: API_URL_BASE\n});\n","/**\n * Saga to watch for load launches actions and make request to Spacewatch API\n */\n\nimport { call, take, race, put, takeLeading } from \"redux-saga/effects\";\n\nimport { loadLaunchesSuccess, loadLaunchesFailed } from \"actions/\";\n\nimport spacexdata from \"api/spacexdata\";\n\nexport function* watchLoadLaunches() {\n  // Only takes the first action and blocks until it is done\n  yield takeLeading(\"LOAD_LAUNCHES_START\", function*(action) {\n    // Race between task completing and cancellation/failed\n    yield race({\n      task: call(loadLaunches, action),\n      cancel: take([\n        \"LOAD_LAUNCHES_CANCEL\",\n        \"LOAD_LAUNCHES_FAILED\",\n        \"CANCEL_ALL\"\n      ])\n    });\n  });\n}\n\nexport function* loadLaunches(action) {\n  const { params } = action;\n\n  try {\n    const response = yield call(spacexdata.get, \"launches\", { params });\n\n    yield put(loadLaunchesSuccess({ payload: response.data }));\n  } catch (error) {\n    yield put(\n      loadLaunchesFailed({\n        error: {\n          message: error.message,\n          status: error.response && error.response.status,\n          statusText: error.response && error.response.statusText\n        },\n        ...action\n      })\n    );\n  }\n}\n","/**\n * Root saga for all launches related requests\n */\n\nimport { all } from \"redux-saga/effects\";\n\nimport { watchLoadLaunches } from \"./launches\";\n\nexport function* rootSaga() {\n  yield all([watchLoadLaunches()]);\n}\n","/**\n * Root saga for all sagas\n */\n\nimport { all } from \"redux-saga/effects\";\n\nimport * as launches from \"./launches/\";\n\nexport default function*() {\n  yield all([launches.rootSaga()]);\n}\n","import React from \"react\";\n\nimport { Provider } from \"react-redux\";\n\nimport Launches from \"containers/Launches\";\n\nimport configureStore from \"./init\";\n\nconst store = configureStore();\n\nconst App = () => (\n  <Provider store={store}>\n    <Launches />\n  </Provider>\n);\n\nexport default App;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport reducers from \"./reducers/\";\nimport rootSaga from \"./sagas/\";\n\nconst production = process.env.NODE_ENV === \"production\";\n\nexport default function configureStore(preloadedState) {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const middlewares = [sagaMiddleware];\n\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [middlewareEnhancer];\n\n  const devCompose = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const composedEnhancers = production\n    ? compose(...enhancers)\n    : devCompose(...enhancers);\n  // : composeWithDevTools(...enhancers);\n\n  const store = createStore(reducers, preloadedState, composedEnhancers);\n  sagaMiddleware.run(rootSaga);\n\n  // if (!production && module.hot) {\n  // module.hot.accept(\"./reducers\", () => store.replaceReducer(reducers));\n  // }\n\n  return store;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}